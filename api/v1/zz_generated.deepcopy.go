//go:build !ignore_autogenerated

// Copyright Contributors to the Open Cluster Management project

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cert) DeepCopyInto(out *Cert) {
	*out = *in
	if in.Sans != nil {
		in, out := &in.Sans, &out.Sans
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cert.
func (in *Cert) DeepCopy() *Cert {
	if in == nil {
		return nil
	}
	out := new(Cert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicy) DeepCopyInto(out *CertificatePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicy.
func (in *CertificatePolicy) DeepCopy() *CertificatePolicy {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CertificatePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicyList) DeepCopyInto(out *CertificatePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CertificatePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicyList.
func (in *CertificatePolicyList) DeepCopy() *CertificatePolicyList {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CertificatePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicySpec) DeepCopyInto(out *CertificatePolicySpec) {
	*out = *in
	in.NamespaceSelector.DeepCopyInto(&out.NamespaceSelector)
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = make(map[string]NonEmptyString, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MinDuration != nil {
		in, out := &in.MinDuration, &out.MinDuration
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.MaxDuration != nil {
		in, out := &in.MaxDuration, &out.MaxDuration
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.MinCADuration != nil {
		in, out := &in.MinCADuration, &out.MinCADuration
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.MaxCADuration != nil {
		in, out := &in.MaxCADuration, &out.MaxCADuration
		*out = new(metav1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicySpec.
func (in *CertificatePolicySpec) DeepCopy() *CertificatePolicySpec {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificatePolicyStatus) DeepCopyInto(out *CertificatePolicyStatus) {
	*out = *in
	if in.CompliancyDetails != nil {
		in, out := &in.CompliancyDetails, &out.CompliancyDetails
		*out = make(map[string]CompliancyDetails, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make([]HistoryEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificatePolicyStatus.
func (in *CertificatePolicyStatus) DeepCopy() *CertificatePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(CertificatePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompliancyDetails) DeepCopyInto(out *CompliancyDetails) {
	*out = *in
	if in.NonCompliantCertificatesList != nil {
		in, out := &in.NonCompliantCertificatesList, &out.NonCompliantCertificatesList
		*out = make(map[string]Cert, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompliancyDetails.
func (in *CompliancyDetails) DeepCopy() *CompliancyDetails {
	if in == nil {
		return nil
	}
	out := new(CompliancyDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HistoryEvent) DeepCopyInto(out *HistoryEvent) {
	*out = *in
	in.LastTimestamp.DeepCopyInto(&out.LastTimestamp)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HistoryEvent.
func (in *HistoryEvent) DeepCopy() *HistoryEvent {
	if in == nil {
		return nil
	}
	out := new(HistoryEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Target) DeepCopyInto(out *Target) {
	*out = *in
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]NonEmptyString, len(*in))
		copy(*out, *in)
	}
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]NonEmptyString, len(*in))
		copy(*out, *in)
	}
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = new([]metav1.LabelSelectorRequirement)
		if **in != nil {
			in, out := *in, *out
			*out = make([]metav1.LabelSelectorRequirement, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Target.
func (in *Target) DeepCopy() *Target {
	if in == nil {
		return nil
	}
	out := new(Target)
	in.DeepCopyInto(out)
	return out
}
